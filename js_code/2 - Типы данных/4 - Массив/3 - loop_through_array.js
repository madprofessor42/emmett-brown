// for 
let array_for_simpleFor = [1,2,3,4]
for (let i = 0; i < array_for_simpleFor.length; i++){
    console.log(array_for_simpleFor[i])
}


// for of - Цикл for..of не предоставляет доступа к номеру текущего элемента, только к его значению, но в большинстве случаев этого достаточно. А также это короче.
let array_for_forOf = [1,2,3,4]
for (let elem of array_for_forOf){
    console.log(elem)
}


// for in - лучше его не использовать для массивов, так как он создан для объектов
/*
1. Цикл for..in оптимизирован под произвольные объекты, не массивы, и поэтому в 10-100 раз медленнее. 
   Увеличение скорости выполнения может иметь значение только при возникновении узких мест. Но мы всё же должны представлять разницу.
2. Цикл for..in выполняет перебор всех свойств объекта, а не только цифровых. 
   В браузере и других программных средах также существуют так называемые «псевдомассивы» – объекты, которые выглядят, как массив. 
   То есть, у них есть свойство length и индексы, но они также могут иметь дополнительные нечисловые свойства и методы, которые нам обычно не нужны. 
   Тем не менее, цикл for..in выведет и их. Поэтому, если нам приходится иметь дело с объектами, похожими на массив, такие «лишние» свойства могут стать проблемой.
*/
let array_for_forIn = [1,2,3,4]
for (let i in array_for_forIn){
    console.log(array_for_forIn[i])
}


// forEach
let array_for_forEach = [1,2,3,4]
array_for_forEach.forEach(el => console.log(el))





