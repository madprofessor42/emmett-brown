// Синтаксис, который мы использовали до этого, называется Function Declaration (Объявление Функции):
function sayHi() {
    return 'Hi'
};

// Существует ещё один синтаксис создания функций, который называется Function Expression (Функциональное Выражение).
// Данный синтаксис позволяет нам создавать новую функцию в середине любого выражения.
let sayHiExpression = function() {
    console.log( "Привет" );
};

// Функции можно копировать. Должны это делать не укаызвая фигурные скобки
let copyOfFunction = sayHi
console.log(copyOfFunction)                 // [Function: sayHi]
console.log(copyOfFunction())               // Hi

// Если указать фигурные скобки, то мы скопируем не функцию, а запишем результат функции в переменную
let resultAfterReturn = sayHi()
console.log(resultAfterReturn)              // Hi


// Function Expression создаётся, когда выполнение доходит до него, и затем уже может использоваться.
// Function Declaration может быть вызвана раньше, чем она объявлена.
    // Другими словами, когда движок JavaScript готовится выполнять скрипт или блок кода, прежде всего он ищет в нём Function Declaration и создаёт все такие функции. Можно считать этот процесс «стадией инициализации».
    // И только после того, как все объявления Function Declaration будут обработаны, продолжится выполнение.
    // В результате функции, созданные как Function Declaration, могут быть вызваны раньше своих определений.



