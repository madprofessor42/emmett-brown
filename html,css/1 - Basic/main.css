/* :root {--variable: value} - так указываются переменные CSS, которые можно переиспользовать*/
:root { 
    --dark: #374151;
    --darker: #1F2937;
    --darkest: #111827;
    --gray: #687280;
    --light: #EEE;
    --pink: #EC4899;
    --purple: #8B5Cf6;
}
/* property: var(--variableName) - применить переменную */
body {
    background-color: var(--light);
}

/* * {} - так указывается что применить стили ко всем элементам */

/* tagName * {} - добавить стили для всех дочерних элементов */

/* tagName {} - применить только к конкретному тэгу */

/* tagName#idName {} - применить ко всем тэгам с заданным id */

/* tagName.className {} - применить ко всем тэгам с заданным class */

/* tagName , tagName {} - применить к ряду тэгов */

/* #idName {} - применить к id - id может быть всего 1 на 1 элемент (best practice) */                           

/* .className {} - применить к конкретному классу - class может быть у нескольких элементов */

/* .className.className {} - применить к мультиклассу (если класс указан как class="className_1 className_2"), 
    например класс у элемента toolbar_links, когда юзер кликнул на элемент то появляется класс active, что бы задать CSS этому классу, то делаем .toolbar_links.active */

/* tagName_1 > tagName_2 {} - применить к tagName_2, который вложен в tagName_1 (могут быть не только тэги)*/

/* tagName_1 + tagName_2 {} - применить к tagName_2, который является соседним элементом с tagName_1 (могут быть не только тэги)  */

/* tagName_1 tagName_2 {} - применить стили к tagName_2, который вложен в tagName_1, но при этом сам tagName_2 может быть так же вложен в другой блок (могут быть не только тэги) */


/* tagName[attr] {} - применить к тэгу с конкретным атрибутом */

/* tagName[attr="value"] {} - применить к тэгу с конкретным атрибутом и значением */

/* tagName[attr^="value"] {} - применить к тэгу с конкретным атрибутом и значение которого начинается на указанное слово */

/* tagName[attr$="value"] {} - применить к тэгу с конкретным атрибутом и значение которого заканчивается на указанное слово */

/* tagName[attr*="value"] {} - применить к тэгу с конкретным атрибутом и значение которого включает указанное слово */




/* ПСЕВДОКЛАССЫ - Элементы HTML могут находиться в разных состояниях потому что с ними взаимодействует пользователь либо потому что один из их дочерних элементов находится в том или ином состоянии.*/

/* tagName:active {} - когда кнопка нажата (может быть любой тэг) */

/* .className:hover {} - когда на элемент навелись (может быть любой тэг) */

/* nagMame:nth-child(even) {} - Настройка для всех четных абзацев */



/* ПСЕВДОЭЛЕМЕНТ - отличаются от псевдоклассов тем, что они не реагируют на состояние платформы, а действуют так, как если бы они вставляли новый элемент с помощью CSS. */

/* .className::before {content: 'Prefix - ';} - применяется до элемента*/

/* .className::after {content: ' - Postfix';} - применяется после элемента*/

/*  li::marker {color: red;} - изменить цвет отображаемых точек для списка */

/* .className::selection {background: black ; color: white;} - применять стили к содержимому, выделенному пользователем. */
 


/* Если нужно задать общее свойство для элементов, то создаем 2 класса */
.item {
    padding: 1rem;
    background-color: beige;
    border: 1px solid red;
}

.item_1 {
    font-size: 34px;
}

.item_2 {
    font-weight: 700;
}